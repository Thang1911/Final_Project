// <auto-generated />
using System;
using BlazorApi.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241215172655_updateOffers")]
    partial class updateOffers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorApi.Models.Category.Arseach", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("arseach_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("arsearch_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Arseachs");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Artopic", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("artopic_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("artopic_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("ArTopics");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Categories", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("research_number")
                        .HasColumnType("int");

                    b.Property<string>("role_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("training_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.HasIndex("training_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Councils", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("position_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Councils");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.LvTopics", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("category")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("lvtopic_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("LvTopics");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Money", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("money_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Moneys");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Office", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("office_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("office_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("office_parent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Paper", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("paper_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Papers");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Product", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Propose", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("propose_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Proposes");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Role", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Score", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("council")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("decision_num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("mark")
                        .HasColumnType("int");

                    b.Property<string>("tbscore_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Seminar", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("seminar_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Seminars");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Suggesttion", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("suggestion_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("suggestion_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Suggesttions");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.TpCouncil", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("tpcouncil_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tpcouncil_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("TpCouncils");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Training", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("training_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("BlazorApi.Models.Conferences.Conference", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("conference_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("office")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seminar_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("status_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("seminar_id");

                    b.ToTable("Conferences");
                });

            modelBuilder.Entity("BlazorApi.Models.Council.council", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("council_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("decision_number")
                        .HasColumnType("int");

                    b.Property<string>("lvcouncil_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tpcouncil_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tpcouncilid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tpcouncilid");

                    b.ToTable("Council");
                });

            modelBuilder.Entity("BlazorApi.Models.Curriculum.Curriculums", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("book_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("training_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trainingid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("trainingid");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("BlazorApi.Models.File.File", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("file_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("original_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("related_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("related_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("BlazorApi.Models.Magazine.Magazines", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("journal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("magazine_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paper_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("paper_id");

                    b.ToTable("Magazines");
                });

            modelBuilder.Entity("BlazorApi.Models.Offer.Offers", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("propose_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("proposeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("proposeid");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.Scientist", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address_office")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birth_place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("degree_Id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("house_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nvestiture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("office_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("office_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("research_major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("research_position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("research_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scientific_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("Scientists");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.ScientistCurriculumRole", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("curriculum_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("scientist_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("curriculum_id");

                    b.HasIndex("role_id");

                    b.HasIndex("scientist_id");

                    b.ToTable("ScientistCurriculumRoles");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.ScientistMagazineRole", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("magazine_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("scientist_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("magazine_id");

                    b.HasIndex("role_id");

                    b.HasIndex("scientist_id");

                    b.ToTable("ScientistMagazineRoles");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.ScientistOfferRole", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("offer_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("scientist_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("offer_id");

                    b.HasIndex("role_id");

                    b.HasIndex("scientist_id");

                    b.ToTable("ScientistOfferRoles");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.scientist_topic_role", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("role_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("scientist_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("topic_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.HasIndex("scientist_id");

                    b.HasIndex("topic_id");

                    b.ToTable("ScientistTopicRoles");
                });

            modelBuilder.Entity("BlazorApi.Models.Topic.Topics", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("lvtopic_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("result")
                        .HasColumnType("int");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("topic_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("lvtopic_id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("BlazorApi.Models.User.Users", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("google_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("remember_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorApi.Models.Category.Categories", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Category.Training", "Training")
                        .WithMany()
                        .HasForeignKey("training_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("BlazorApi.Models.Conferences.Conference", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.Seminar", "Seminar")
                        .WithMany()
                        .HasForeignKey("seminar_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seminar");
                });

            modelBuilder.Entity("BlazorApi.Models.Council.council", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.TpCouncil", "tpcouncil")
                        .WithMany()
                        .HasForeignKey("tpcouncilid");

                    b.Navigation("tpcouncil");
                });

            modelBuilder.Entity("BlazorApi.Models.Curriculum.Curriculums", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.Training", "training")
                        .WithMany()
                        .HasForeignKey("trainingid");

                    b.Navigation("training");
                });

            modelBuilder.Entity("BlazorApi.Models.Magazine.Magazines", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.Paper", "Paper")
                        .WithMany()
                        .HasForeignKey("paper_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paper");
                });

            modelBuilder.Entity("BlazorApi.Models.Offer.Offers", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.Propose", "propose")
                        .WithMany()
                        .HasForeignKey("proposeid");

                    b.Navigation("propose");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.Scientist", b =>
                {
                    b.HasOne("BlazorApi.Models.User.Users", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.ScientistCurriculumRole", b =>
                {
                    b.HasOne("BlazorApi.Models.Curriculum.Curriculums", "Curriculums")
                        .WithMany()
                        .HasForeignKey("curriculum_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Category.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Scientist.Scientist", "Scientist")
                        .WithMany()
                        .HasForeignKey("scientist_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculums");

                    b.Navigation("Role");

                    b.Navigation("Scientist");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.ScientistMagazineRole", b =>
                {
                    b.HasOne("BlazorApi.Models.Magazine.Magazines", "Magazines")
                        .WithMany()
                        .HasForeignKey("magazine_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Category.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Scientist.Scientist", "Scientist")
                        .WithMany()
                        .HasForeignKey("scientist_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Magazines");

                    b.Navigation("Role");

                    b.Navigation("Scientist");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.ScientistOfferRole", b =>
                {
                    b.HasOne("BlazorApi.Models.Offer.Offers", "Offer")
                        .WithMany()
                        .HasForeignKey("offer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Category.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Scientist.Scientist", "Scientist")
                        .WithMany()
                        .HasForeignKey("scientist_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");

                    b.Navigation("Role");

                    b.Navigation("Scientist");
                });

            modelBuilder.Entity("BlazorApi.Models.Scientist.scientist_topic_role", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Scientist.Scientist", "Scientist")
                        .WithMany()
                        .HasForeignKey("scientist_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Models.Topic.Topics", "Topics")
                        .WithMany()
                        .HasForeignKey("topic_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Scientist");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("BlazorApi.Models.Topic.Topics", b =>
                {
                    b.HasOne("BlazorApi.Models.Category.LvTopics", "LvTopics")
                        .WithMany()
                        .HasForeignKey("lvtopic_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LvTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
