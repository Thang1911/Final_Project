@page "/Proposals/Approval/{Id}"
@using Models.Project
@inject HttpClient Http
@inject NavigationManager navManager
@rendermode InteractiveServer

<h1 class="mb-3">Approval Proposal Project</h1>
<p>Are you sure you want to approval proposal with Id @Id?</p>
<button class="btn btn-primary" @onclick="ApprovalProposal">Approval</button>
<a class="btn btn-danger" href="/Projects">Cancel</a>

@code {
    [Parameter]
    public string Id { set; get; }
    private string? ErrorMessage; 
    public ProjectProposal? proposal = null;
    public ProjectProposalDto ProjectProposalData { set; get; } = new();
    public ProjectDto ProjectData { set; get; } = new();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            proposal = await Http.GetFromJsonAsync<ProjectProposal>("http://localhost:5160/api/Proposals/" + Id);
            ProjectProposalData.Title = proposal.Title;
            ProjectProposalData.Abstract = proposal.Abstract;
            ProjectProposalData.DetailedDescription = proposal.DetailedDescription;
            ProjectProposalData.ProposedBudget = proposal.ProposedBudget;
            ProjectProposalData.ProposedDuration = proposal.ProposedDuration;
            ProjectProposalData.SubmissionDate = proposal.SubmissionDate;
        }
        catch (Exception e)
        {
            Console.WriteLine("Exeption: " + e.Message);
        }
    }

    protected async Task ApprovalProposal()
    {
        try
        {
            var approvalResponse = await Http.PutAsync($"http://localhost:5160/api/Proposals/approval/{Id}", null);

            if (approvalResponse.IsSuccessStatusCode)
            {
                
                ProjectData.Title = ProjectProposalData.Title;
                ProjectData.Description = ProjectProposalData.DetailedDescription;
                ProjectData.Budget = ProjectProposalData.ProposedBudget;
                ProjectData.Duration = ProjectProposalData.ProposedDuration;
                ProjectData.StartDate = ProjectProposalData.SubmissionDate; 
                ProjectData.Status = "Approved";

                var projectResponse = await Http.PostAsJsonAsync("http://localhost:5160/api/Projects", ProjectData);

                if (projectResponse.IsSuccessStatusCode)
                {
                    navManager.NavigateTo("/Projects");
                }
                else
                {
                    var projectError = await projectResponse.Content.ReadAsStringAsync();
                    ErrorMessage = $"Project creation failed: {projectError}";
                }
            }
            else
            {
                var approvalError = await approvalResponse.Content.ReadAsStringAsync();
                ErrorMessage = $"Approval failed: {approvalError}";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
