@implements IDisposable
@using Microsoft.AspNetCore.Authorization;

@inject NavigationManager NavigationManager
@inject IAuthorizationService AuthorizationService
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Ứng Dụng Quản Lý</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable remove-scroll-bar" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column w-auto">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu"></span> Trang chủ
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                @if (IsAdmin)
                {
                    @foreach (var item in new[] {
                        ("/Admin/AllUsers", "bi bi-person-badge-nav-menu", "Quản lý người dùng"),
                        ("/Admin/Scientists", "bi bi-person-badge-nav-menu", "Nhà khoa học"),
                        ("/Admin/AllOffers", "bi bi-file-check-nav-menu", "Quản lý đề xuất"),
                        ("/Admin/AllTopics", "bi bi-file-text-nav-menu", "Đề tài/Đề án"),
                        ("/Admin/AllMagazines", "bi bi-book-nav-menu", "Bài báo khoa học"),
                        ("/Admin/AllCurriculums", "bi bi-book-fill-nav-menu", "Giáo trình/Sách tham khảo"),
                        ("/Admin/Council", "bi bi-check-nav-menu", "Hội đồng khoa học"),
                        ("/Admin/AllReports", "bi bi-bar-chart-nav-menu", "Báo cáo thống kê"),
                        ("/Admin/All-Categories", "bi bi-setting-nav-menu", "Danh mục")
                    })
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="@item.Item1">
                                <span class="@item.Item2"></span> @item.Item3
                            </NavLink>
                        </div>
                    }
                }
                else
                {
                    @foreach (var item in new[] {
                        ("/ProfileDetail", "bi bi-person-fill-nav-menu", "Thông tin cá nhân"),
                        ("/User/Offers", "bi bi-file-check-nav-menu", "Đề xuất đề tài/đề án"),
                        ("/User/Topics", "bi bi-file-text-nav-menu", "Đề tài/Đề án"),
                        ("/User/Magazines", "bi bi-book-nav-menu", "Bài báo khoa học"),
                        ("/User/Curriculums", "bi bi-book-fill-nav-menu", "Giáo trình/Sách tham khảo")
                    })
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="@item.Item1">
                                <span class="@item.Item2"></span> @item.Item3
                            </NavLink>
                        </div>
                    }
                }
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu"></span> Đăng xuất
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                @foreach (var item in new[] {
                    ("Account/Register", "bi bi-person-nav-menu", "Đăng ký"),
                    ("Account/Login", "bi bi-person-badge-nav-menu", "Đăng nhập")
                })
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="@item.Item1">
                            <span class="@item.Item2"></span> @item.Item3
                        </NavLink>
                    </div>
                }
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>


@code {
    private string? currentUrl;
    private bool IsAdmin = false;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var authorizationResult = await AuthorizationService.AuthorizeAsync(user, null, "Administrators");
            IsAdmin = authorizationResult.Succeeded;
        }
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

