<form>
    <div class="mt-2">
        <!-- Hàng đầu tiên -->
        <div class="auto-cols">
            <div>
                <label class="labels">Tên đề xuất<span class="text-red">*</span></label>
                <input readonly="@IsReadOnly" type="text" class="form-control" placeholder="Tên đề xuất" @bind="@NewOffer.offer_name">
                @if (showError && string.IsNullOrWhiteSpace(NewOffer.offer_name))
                {
                    <span class="text-danger">Vui lòng nhập tên đề xuất</span>
                }
            </div>
            <div>
                <label class="labels">Ghi chú <span class="text-gray">(Tùy chọn)</span></label>
                <input readonly="@IsReadOnly" type="text" class="form-control" placeholder="Ghi chú" @bind="@NewOffer.note">
            </div>
            <div>
                <label class="labels">Vai trò<span class="text-red">*</span></label>
                <select disabled="@IsReadOnly" type="text" class="form-control" @onchange="HandleRoleChange">
                    <option value="">Chọn vai trò</option>
                    @foreach (var item in roles)
                    {
                        <option value="@item.id">@item.role_name</option>
                    }
                </select>
                @if (showError && string.IsNullOrWhiteSpace(roleId))
                {
                    <span class="text-danger">Vui lòng chọn vai tró.</span>
                }
            </div>
        </div>

        <!-- Hàng thứ hai -->
        <div class="auto-cols mt-2">
            <div>
                <label class="labels">Năm<span class="text-red">*</span></label>
                <select disabled="@IsReadOnly" type="text" class="form-control" @bind="@NewOffer.year">
                    <option value="0" selected>Chọn năm</option>
                    @for (int year = DateTime.Now.Year; year >= 1900; year--)
                    {
                        <option value="@year">@year</option>
                    }
                </select>
                @if (showError && NewOffer.year == 0)
                {
                    <span class="text-danger">Vui lòng chọn năm.</span>
                }
            </div>
            <div>
                <label class="labels">Loại đề xuất<span class="text-red">*</span></label>
                <select disabled="@IsReadOnly" type="text" class="form-control" @bind="@NewOffer.propose_id">
                    <option value="">Chọn loại đề xuất</option>
                    @foreach (var item in ListProposes)
                    {
                        <option value="@item.id">@item.propose_name</option>
                    }
                </select>
                @if (showError && string.IsNullOrWhiteSpace(NewOffer.propose_id))
                {
                    <span class="text-danger">Vui lòng chọn loại đề xuất.</span>
                }
            </div>
        </div>
    </div>

    <div class="d-flex gap-1 mt-2">
        <div class="text-center">
            <button class="btn btn-primary" type="button" @onclick="OnCancel">Hủy</button>
        </div>
        <div class="text-center">
            <button class="btn btn-success" type="submit" @onclick="OnSave" @onclick:preventDefault>Lưu</button>
        </div>
    </div>
</form>

@code {
    [Parameter] public string roleId { get; set; }
    [Parameter] public List<Models.Category.Role> roles { get; set; }
    [Parameter] public Models.Offer.Offers NewOffer { get; set; }
    [Parameter] public List<Models.Category.Propose> ListProposes { get; set; }
    [Parameter] public bool IsReadOnly { get; set; }
    [Parameter] public bool showError { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }
    [Parameter] public EventCallback<string> roleIdChanged { get; set; }

    private async Task HandleRoleChange(ChangeEventArgs e)
    {
        roleId = e.Value?.ToString();
        Console.WriteLine($"roleId: {roleId}");
        await roleIdChanged.InvokeAsync(roleId); // <-- Gửi giá trị lên parent
    }
}
