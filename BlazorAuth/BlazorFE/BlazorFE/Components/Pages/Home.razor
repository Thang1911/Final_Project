@page "/"
@using System.Security.Claims;
@using BlazorFE.Components.Common;
@using BlazorFE.Data;
@using BlazorFE.Services;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;

@inject UserManager<ApplicationUser> _UserManager
@inject RoleManager<IdentityRole> _RoleManager
@inject ScientistServices ProfileServices
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthorizationService AuthorizationService
@inject NavigationManager NavigationManager

<PageTitle>Trang chủ</PageTitle>
    @if(IsAdmin)
    {
        <h1>Xin chào, Admin!</h1>
    } else
    {
        <h1>Xin chào, nhà khoa học!</h1>
    }
    <ButtonExport />
    <div class="d-flex justify-content-center mt-4">
        <div class="w-fit d-flex flex-wrap gap-4">
            @if(!IsAdmin) {
                <NavLink href="/ProfileDetail" class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center no-underline">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Thông tin cá nhân</div>
                </NavLink>
                <NavLink href="/User/Offers" class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center no-underline">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Đề xuất cá nhân</div>
                </NavLink>
                <NavLink href="/User/Topics" class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center no-underline">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Đề tài/Đề án</div>
                </NavLink>
                <NavLink href="/User/Magazines" class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center no-underline">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Bài báo khoa học</div>
                </NavLink>
                <NavLink href="/User/Curriculums" class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center no-underline">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Giáo trình/Sách tham khảo</div>
                </NavLink>
            }
            else
            {
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Nhà khoa học</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Quản lý đề xuất</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Đề tài/Đề án</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Hội thảo/Hội nghị</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Bài báo khoa học</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Giáo trình/Sách tham khảo</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Hội đồng khoa học</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Tổng giờ khoa học</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Báo cáo thống kê</div>
                </div>
                <div class="d-flex flex-column text-center gap-2 bg-primary bg-opacity-50 rounded-3 text-white width-item align-center">
                    <div class="d-flex justify-content-center">
                        <div class="pt-2 px-2 w-fit">
                            <div class="bi-bank-nav-menu"></div>
                        </div>
                    </div>
                    <div class="px-2 pb-2">Báo cáo tiến độ</div>
                </div>
            }
        </div>
    </div>

<style>
    .bi-bank-nav-menu {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='white' class='bi bi-bank' viewBox='0 0 16 16'%3E%3Cpath d='m8 0 6.61 3h.89a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H15v7a.5.5 0 0 1 .485.38l.5 2a.498.498 0 0 1-.485.62H.5a.498.498 0 0 1-.485-.62l.5-2A.5.5 0 0 1 1 13V6H.5a.5.5 0 0 1-.5-.5v-2A.5.5 0 0 1 .5 3h.89zM3.777 3h8.447L8 1zM2 6v7h1V6zm2 0v7h2.5V6zm3.5 0v7h1V6zm2 0v7H12V6zM13 6v7h1V6zm2-1V4H1v1zm-.39 9H1.39l-.25 1h13.72z'/%3E%3C/svg%3E");
        width: 100px;
        height: 100px;
        display: inline-block;
        background-repeat: no-repeat;
        background-size: contain;
        background-position: center;
    }

    .width-item {
        width: 210px;
        height: 160px;
        cursor: pointer;
    }

    .no-underline {
        text-decoration: none;
    }
</style>

@code {
    private string userid { get; set; }
    private string userName { get; set; }
    private bool IsAdmin = false;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private const string ADMINISTRATION_ROLE = "Administrators";
    private const string USER_ROLE = "User";
    private ClaimsPrincipal CurrentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var principal = authState.User;

        await EnsureRoleExists(ADMINISTRATION_ROLE);
        await EnsureRoleExists(USER_ROLE);

        if (principal.Identity?.IsAuthenticated == true)
        {
            userid = principal.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            userName = principal.Identity.Name;

            var user = await _UserManager.FindByNameAsync(userName);
            if (user != null)
            {
                if (userName.ToLower() == "admin@gmail.com")
                {
                    await EnsureUserInRole(user, ADMINISTRATION_ROLE);
                }
                else
                {
                    await EnsureUserInRole(user, USER_ROLE);
                }
            }
            CurrentUser = (await authenticationStateTask).User;

            if (!string.IsNullOrEmpty(userid) && !string.IsNullOrEmpty(userName))
            {
                var response = await ProfileServices.GetProfileAsync(userid);
                var authorizationResult = await AuthorizationService.AuthorizeAsync(principal, null, "Administrators");
                IsAdmin = authorizationResult.Succeeded;

                if (IsAdmin)
                {
                    return;
                }
                else if (response == null && !IsAdmin)
                {
                    NavigationManager.NavigateTo("/ProfileDetail");
                }
            }
            else
            {
                NavigationManager.NavigateTo("Account/Login");
            }
        }
        else
        {
            NavigationManager.NavigateTo("Account/Login");
        } 
    }

    private async Task EnsureRoleExists(string roleName)
    {
        var roleExists = await _RoleManager.RoleExistsAsync(roleName);
        if (!roleExists)
        {
            await _RoleManager.CreateAsync(new IdentityRole(roleName));
        }
    }

    private async Task EnsureUserInRole(ApplicationUser user, string roleName)
    {
        var isInRole = await _UserManager.IsInRoleAsync(user, roleName);
        if (!isInRole)
        {
            await _UserManager.AddToRoleAsync(user, roleName);
        }
    }
}
