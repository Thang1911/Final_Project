@using BlazorFE.Services;

@inject ScientistServices ProfileServices
@inject NavigationManager NavigationManager
@inject IToastService toastService

<form>
    <div class="mt-2">
        <!-- Hàng đầu tiên -->
        <div class="auto-cols">
            <div>
                <label class="labels">Họ và Tên<span class="text-red">*</span></label>
                <input disabled="@isReadOnly" type="text" class="form-control" placeholder="Họ và tên" @bind="@scientist.profile_name">
            </div>
            <div>
                <label class="labels">Ngày sinh<span class="text-red">*</span></label>
                <input disabled="@isReadOnly" type="date" class="form-control" @bind="@scientist.birthday">
            </div>
            <div>
                <label class="labels">Giới tính<span class="text-red">*</span></label>
                <select disabled="@isReadOnly" type="text" class="form-control" @bind="@scientist.gender">
                    <option value="">Chọn giới tính</option>
                    <option value="Nam">Nam</option>
                    <option value="Nữ">Nữ</option>
                    <option value="Khác">Khác</option>
                </select>
            </div>
        </div>

        <!-- Hàng thứ hai -->
        <div class="auto-cols mt-2">
            <div>
                <label class="labels">Nơi sinh<span class="text-red">*</span></label>
                <input disabled="@isReadOnly" type="text" class="form-control" @bind="@scientist.birth_place">
            </div>
            <div>
                <label class="labels">Địa chỉ liên lạc</label>
                <input disabled="@isReadOnly" type="text" class="form-control" @bind="@scientist.address">
            </div>
        </div>

        <!-- Hàng thứ ba -->
        <div class="auto-cols mt-2">
            <div>
                <label class="labels">Điện thoại di động<span class="text-red">*</span></label>
                <input disabled="@isReadOnly" type="number" class="form-control" placeholder="Điện thoại di động" @bind="@scientist.phone">
            </div>
            <div>
                <label class="labels">Điện thoại nhà riêng</label>
                <input disabled="@isReadOnly" type="number" class="form-control" placeholder="Điện thoại nhà riêng" @bind="@scientist.house_phone">
            </div>
            <div>
                <label class="labels">Điện thoại cơ quan</label>
                <input disabled="@isReadOnly" type="number" class="form-control" placeholder="Điện thoại cơ quan" @bind="@scientist.office_phone">
            </div>
            <div>
                <label class="labels">Email<span class="text-red">*</span></label>
                <input disabled="true" type="email" class="form-control" placeholder="Email" @bind="@scientist.email">
            </div>
        </div>

        <!-- Hàng thứ tư -->
        <div class="auto-cols mt-2">
            <div>
                <label class="labels">Học vị<span class="text-red">*</span></label>
                <select class="form-control" @bind="@scientist.degree_id" disabled="@isReadOnly">
                    <option value="">Chọn học vị</option>
                    @if (ListDegrees != null)
                    {
                        @foreach (var degree in ListDegrees)
                        {
                            <option value="@degree.id">@degree.degree_name</option>
                        }
                    }
                </select>
            </div>
            <div>
                <label class="labels">Năm phong</label>
                <select disabled="@isReadOnly" class="form-control" @bind="@scientist.nvestiture">
                    <option value="0" selected>Chọn năm</option>
                    @for (int year = DateTime.Now.Year; year >= 1900; year--)
                    {
                        <option value="@year">@year</option>
                    }
                </select>
            </div>
            <div>
                <label class="labels">Chức danh khoa học</label>
                <input disabled="@isReadOnly" type="text" class="form-control" placeholder="Chức danh khoa học" @bind="@scientist.scientific_title">
            </div>
        </div>

        <!-- Hàng thứ năm -->
        <div class="auto-cols mt-2">
            <div>
                <label class="labels">Chức danh nghiên cứu</label>
                <input disabled="@isReadOnly" type="text" class="form-control" placeholder="Chức danh nghiên cứu" @bind="@scientist.research_title">
            </div>
            <div>
                <label class="labels">Chức vụ nghiên cứu</label>
                <input disabled="@isReadOnly" type="text" class="form-control" placeholder="Chức vụ nghiên cứu" @bind="@scientist.research_position">
            </div>
            <div>
                <label class="labels">Tên tổ chức<span class="text-red">*</span></label>
                <select class="form-control" @bind="@scientist.office_id" @bind:event="oninput" disabled="@isReadOnly">
                    <option value="">Chọn tổ chức</option>
                    @if (Offices != null)
                    {
                        @foreach (var office in Offices)
                        {
                            <option value="@office.id">@office.office_name</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div>
            <label class="labels">Địa chỉ tổ chức<span class="text-red">*</span></label>
            <input disabled="true" type="text" class="form-control" placeholder="Địa chỉ tổ chức" @bind="@scientist.address_office">
        </div>
    </div>

    <div class="d-flex gap-1 mt-2">
        <div class="mt-5 text-center">
            <button class="btn btn-primary" type="button" @onclick="Reload">Hủy</button>
        </div>
        @if (!isReadOnly)
        {
            <div class="mt-5 text-center">
                <button class="btn btn-success" type="submit" @onclick="ValidateAndSave" @onclick:preventDefault>Lưu</button>
            </div>
        }
        else
        {
            <div class="mt-5 text-center">
                <button class="btn btn-warning" type="button" @onclick="() => isReadOnly = false">Chỉnh sửa</button>
            </div>
        }
    </div>
</form>

<div class="mt-4">
    <h5>Đổi mật khẩu</h5>
    <div class="auto-cols">
        <div>
            <label class="labels">Mật khẩu hiện tại<span class="text-red">*</span></label>
            <input type="password" class="form-control" placeholder="Mật khẩu hiện tại" @bind="@currentPassword">
        </div>
        <div>
            <label class="labels">Mật khẩu mới<span class="text-red">*</span></label>
            <input type="password" class="form-control" placeholder="Mật khẩu mới" @bind="@newPassword">
        </div>
        <div>
            <label class="labels">Xác nhận mật khẩu mới<span class="text-red">*</span></label>
            <input type="password" class="form-control" placeholder="Xác nhận mật khẩu mới" @bind="@confirmNewPassword">
        </div>
    </div>
</div>

<div class="mt-3 text-center">
    <button class="btn btn-primary" type="button" @onclick="ChangePassword">Đổi mật khẩu</button>
</div>

<style>
    .auto-cols {
        display: flex;
        flex-direction: row;
        width: 100%;
        gap: 16px;
        justify-content: space-between;
    }

    .auto-cols > div {
        flex: 1;
        min-width: 200px;
    }

    .d-flex {
        display: flex;
        flex-direction: row;
        justify-content: right;
    }

    .text-red {
        color: red;
    }
</style>

@code {
    [Parameter] public Models.Scientist.Scientist scientist { get; set; }
    [Parameter] public List<Models.Category.Office> Offices { get; set; }
    [Parameter] public List<Models.Category.Degree> ListDegrees { get; set; }
    private bool isReadOnly = true;
    private bool showError = false;

    private string currentPassword { get; set; } = "";
    private string newPassword { get; set; } = "";
    private string confirmNewPassword { get; set; } = "";

    private void Reload()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private async Task ValidateAndSave()
    {
        if (IsValid())
        {
            await UpdateProfile();
            isReadOnly = true;
            toastService.ShowSuccess("Chỉnh sửa thông tin thành công!");
            await Task.Delay(3000);
            Reload();
        }
        else
        {
            showError = true; 
            toastService.ShowError("Chỉnh sửa thông tin thất bại! Vui lòng kiểm tra lại!");
        }
    }

    private bool IsValid()
    {
        return !string.IsNullOrWhiteSpace(scientist.profile_name) &&
               !string.IsNullOrWhiteSpace(scientist.gender) &&
               scientist.birthday != null &&
               !string.IsNullOrWhiteSpace(scientist.birth_place) &&
               !string.IsNullOrWhiteSpace(scientist.email) &&
               scientist.degree_id != null &&
               !string.IsNullOrWhiteSpace(scientist.office_id) &&
               !string.IsNullOrWhiteSpace(scientist.address_office);
    }

    private async Task UpdateProfile()
    {
        if (scientist != null)
        {
            scientist.updated_at = DateTime.Now;
            try
            {
                await ProfileServices.UpdateProfileAsync(scientist);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error updating profile: " + ex.Message);
            }
        }
    }

    private async Task ChangePassword()
    {
        if (string.IsNullOrWhiteSpace(currentPassword) || string.IsNullOrWhiteSpace(newPassword) || string.IsNullOrWhiteSpace(confirmNewPassword))
        {
            toastService.ShowError("Vui lòng nhập đầy đủ thông tin!");
            return;
        }

        if (newPassword != confirmNewPassword)
        {
            toastService.ShowError("Mật khẩu mới và xác nhận mật khẩu không khớp!");
            return;
        }

        var result = await ProfileServices.ResetPasswordAsync(currentPassword, newPassword, scientist.email);

        if (!result.isError)
        {
            toastService.ShowSuccess("Đổi mật khẩu thành công!");
            currentPassword = string.Empty;
            newPassword = string.Empty;
            confirmNewPassword = string.Empty;
        }
        else
        {
            toastService.ShowError("Đổi mật khẩu thất bại! Vui lòng kiểm tra lại.");
        }
    }
}
